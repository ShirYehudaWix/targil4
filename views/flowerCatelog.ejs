<body >
<script>
    console.log("here")
    let el=document.getElementById("addFlower");
    el.style.display = "none";
    let data = JSON.parse(sessionStorage.getItem("user"));
    let type = data['type'];

    if(type=="menager")
    {
        el.style.display = "inline";
    }
</script>
<input type='button' class="user-buttons" onclick='tableflowerCatelog()'
       value='Open and Refresh Flowers Catalog' />
<input type='button' id="addFlower" class="user-buttons" data-toggle="modal" data-target="#myModal5"
       value='Add New Flower To Catelog' />
<p id='showData'></p>
</body>




<div class="modal fade" id="myModal5" tabindex="-1" role="dialog" >
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="myModalLabel" >Add Flower</h4>
            </div>
                <form ref='uploadForm'
                      id='uploadForm'
                      action='/upload1'
                      method='post'
                      encType="multipart/form-data" class="pb-modalreglog-form-reg">
            <div class="modal-body">
                    <div class="form-group">
                        <div id="pb-modalreglog-progressbar"></div>
                    </div>


                    <div class="form-group">
                        <label for="flowerName">Flower's Name</label>
                        <div class="input-group pb-modalreglog-input-group">
                            <span class="input-group-addon"><span ></span></span>
                            <input type="text" class="form-control" id="flowerName" name="flowerName" placeholder="Flower Name" required>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="flowerColor">Flower's Color</label>
                        <div class="input-group pb-modalreglog-input-group">
                            <span class="input-group-addon"><span ></span></span>
                            <input type="text" class="form-control" id="flowerColor" name="flowerColor" placeholder="Flower Color" required>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="flowerPrice">Flower's Price</label>
                        <div class="input-group pb-modalreglog-input-group">
                            <span class="input-group-addon"><span></span></span>
                            <input type="text" class="form-control" id="flowerPrice" name="flowerPrice" placeholder="Flower Price" required>
                        </div>
                    </div>


                    <input type="file" name="sampleFile"  />

                    <div class="form-group">
                        <label for="link">or Link to online photo</label>
                        <div class="input-group pb-modalreglog-input-group">
                            <span class="input-group-addon"><span></span></span>
                            <input type="text" class="form-control" id="link" name="link" placeholder="Link" >
                        </div>
                    </div>


            </div>
            <div class="modal-footer">
                    <input type='submit' value='Add' class="btn btn-primary"  />
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
                </form>
        </div>
    </div>
</div>



<script>
    function tableflowerCatelog() {
        fetch("/flower.json")
            .then(response => response.json())
            .then(json => {
                // the json data. (you can change the values for output.)

                list=json;
                // Extract value from table header.
                // ('Book ID', 'Book Name', 'Category' and 'Price')
                var col = [];
                for (var i = 0; i < list.length; i++) {
                    for (var key in list[i]) {
                        if (col.indexOf(key) === -1 &&(key=="name"||key=="color"||key=="price"||key=="image")) {
                            col.push(key);
                        }
                    }
                }

                // Create a table.
                var table = document.createElement("table");

                // Create table header row using the extracted headers above.
                var tr = table.insertRow(-1);                   // table row.

                for (var i = 0; i < col.length; i++) {
                    var th = document.createElement("th");      // table header.
                    th.innerHTML = col[i];
                    tr.appendChild(th);
                }
                // add json data to the table as rows.
                for (var i = 0; i < list.length; i++) {

                    tr = table.insertRow(-1);

                    for (var j = 0; j < col.length; j++) {
                        var tabCell = tr.insertCell(-1);
                        if(col[j]=='image'){
                            var img = document.createElement("img");
                            img.style.width="200px";
                            tabCell.insertAdjacentElement("beforeend",img);
                            if(list[i].image.contentType=="image/png")
                            {
                            img.src="data:image/png;base64, " +list[i].image.data;
                            }
                            else{
                                img.src=list[i][col[j]].url;
                            }
                        }
                        else{
                        tabCell.innerHTML = list[i][col[j]];
                        }
                    }
                }

                // Now, add the newly created table with json data, to a container.
                var divShowData = document.getElementById('showData');
                divShowData.innerHTML = "";
                divShowData.appendChild(table);

                
            });
    }
    document.addEventListener("DOMContentLoaded",  function()
    {
        console.log("here")
        let el=document.getElementById("addFlower");
        el.style.display = "none";
        let data = JSON.parse(sessionStorage.getItem("user"));
        let type = data['type'];

        if(type=="menager")
        {
            el.style.display = "block";
        }

    })







</script>